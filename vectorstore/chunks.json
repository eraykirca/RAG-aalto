[
  " : VerdeCharge: A Platform for Smart-Grid EV Charging Optimization",
  "Overview: VerdeCharge is a cloud-native optimization system that schedules electric-\nvehicle charging to minimize carbon intensity, demand charges and feeder\nstrain. It ingests real-time grid CO₂ signals, day-ahead tariffs and user\nconstraints, then produces actionable charging plans for homes, fleets and\npublic stations.",
  "Overview: The system includes:\n- A responsive web app for drivers\n- A Fleet Manager dashboard for logistics operators\n- An OCPP-compatible gateway (VerdeHub) for commercial chargers\n- A serverless backend on AWS (Lambda, DynamoDB, EventBridge)",
  "Key Components: 1. Carbon-Aware Scheduling Engine  \n   - Inputs: WattTime CO₂ forecast, wholesale ISO prices, transformer\n     capacity limits.  \n   - Solver: MILP formulated in Pyomo, solved via Gurobi 10.  \n   - Output: Per-vehicle set-points (start time, stop time, power level).",
  "Key Components: 2. Telemetry Pipeline  \n   - OCPP 1.6 JSON messages received over TLS 1.3.  \n   - MQTT topic hierarchy (`/fleet/<id>/charger/<id>/metrics`).  \n   - Stream processing in AWS Kinesis → DynamoDB.",
  "Key Components: 3. Dynamic Tariff Module  \n   - Integrates with 27 U.S. utilities (PG&E, ConEd, ERCOT) + ENTSO-E.  \n   - Calculates marginal \\$ / kWh vs kg CO₂ / kWh.  \n   - Supports user-selectable optimization weight α (0 = cost only,\n     1 = carbon only).",
  "Key Components: 4. Fleet Manager Dashboard  \n   - Live map (OpenLayers) with charger status.  \n   - Predictive-maintenance alerts from XGBoost temperature-drift model.  \n   - Carbon-savings leaderboard across depot sites.",
  "Methodology: 1. Data Ingest  \n   - Charger metrics (V, A, kWh) → Kinesis Firehose → S3 (Parquet).  \n   - Forecasts polled every 5 min; merged into 5-min buckets.",
  "Methodology: 2. Optimization Loop  \n   - Triggered when: a) new vehicle plugs in, or b) forecast updates.  \n   - MILP decision variables: binary on/off for each 5-min slot, power\n     level (0–22 kW).  \n   - Constraints: transformer kVA limit, user SOC target, utility peak\n     window, ISO ramp-rate caps.",
  "Methodology: 3. Execution & Feedback  \n   - Schedule commands pushed via OCPP `RemoteStartTransaction` &\n     `SetChargingProfile`.  \n   - Savings report emailed nightly (kg CO₂, \\$, kWh shifted).",
  "Example Use Case: A grocery-delivery fleet of 25 vans docks at 18:00 with 40 % SOC and must\nreach 90 % by 05:30. VerdeCharge shifts 76 % of consumption to 01:00–04:00\nwhen grid CO₂ is 187 g/kWh (vs 432 g/kWh at 19:00). Result:  \n- Carbon saved: **18.7 kg** (-43 %)  \n- Demand-charge reduction: **\\$ 51** (ISO-NE off-peak rate)  \n- Vehicles ready by 05:18.",
  "Security and Privacy: - ISO 27001 and SOC 2 Type II certified.  \n- At-rest encryption via AWS KMS CMK.  \n- OCPP traffic over TLS 1.3, certificate-pinned per charger.  \n- Personal data (driver emails) auto-deleted after 90 days inactivity.",
  "VerdeHub API Specification: Protocol: HTTPS + JSON (all endpoints idempotent)  \nAuth: JWT signed with ES256; expires 15 min; refreshed via OAuth 2.0 PKCE.",
  "Endpoints: 1. `POST /api/v1/schedule`  \n   - Input: `{ vin, desired_soc, departure_time }`  \n   - Output: `{ start: ISO8601, stop: ISO8601, kw: float }`\n\n2. `POST /api/v1/telemetry`  \n   - Charger → backend every 30 s  \n   - Body: `{ voltage, current, temp, soc, timestamp }`\n\n3. `GET /api/v1/report/{fleet_id}`  \n   - Returns daily savings CSV.",
  "User Manual (Getting Started): 1. Create fleet in dashboard → download config QR.  \n2. Scan QR on each charger to link to fleet.  \n3. Set default optimization weight α (0–1).  \n4. Review carbon-savings widgets after first night.",
  "Plans & Limits: | Plan   | Price / month | Chargers | Features                     |\n|--------|---------------|----------|------------------------------|\n| Basic  | \\$ 49         | 1–10     | Carbon scheduling only       |\n| Pro    | \\$ 149        | 1–50     | Fleet dashboard, API access  |\n| Elite  | \\$ 549        | 50–250   | Predictive maintenance, SLA  |",
  "Plans & Limits: Basic: $49, Chargers: 1-10, Features: Carbon scheduling only\nPro: $149, Chargers: 1-50, Features: Fleet dashboard, API access\nElite: $549, Chargers: 50-250, Features: Predictive maintenance, SLA",
  "Business Model & Revenue Streams: - SaaS subscription (above)  \n- Carbon-credit brokerage (5 % fee on automated credit sales)  \n- White-label API for utilities (\\$0.002 / kWh scheduled)",
  "Cost Structure: - AWS infra: $8k / month  \n- Solver licenses (Gurobi): $2k  \n- Data API fees (forecasts): $1.2k  \n- Support: $4k staff salaries",
  "Growth Strategy: - Partnership with ChargePoint OEMs  \n- EU Horizon 2030 grant application  \n- Referral program: 1 free month per recruited depot",
  "Future Roadmap: - Vehicle-to-Grid bidirectional control  \n- ISO 15118 Plug&Charge support  \n- Android Auto & CarPlay app"
]